from sklearn import neighbors
import numpy as np
from sklearn.metrics import recall_score

def load_dataset(nfile):
    df = np.loadtxt(nfile,dtype='str')
    return np.asarray(df[:,0:-1],dtype=float), np.asarray(df[:,-1],dtype=int)

fname=['03subcl5-600-5-0-bi','03subcl5-600-5-30-bi', '03subcl5-600-5-50-bi', '03subcl5-600-5-60-bi',
        '03subcl5-600-5-70-bi', '04clover5z-600-5-0-bi', '04clover5z-600-5-30-bi', '04clover5z-600-5-50-bi', 
        '04clover5z-600-5-60-bi', '04clover5z-600-5-70-bi', 'paw02a-600-5-0-bi', 'paw02a-600-5-30-bi',
        'paw02a-600-5-50-bi', 'paw02a-600-5-60-bi', 'paw02a-600-5-70-bi', '03subcl5-800-7-0-bi', 
        '03subcl5-800-7-30-bi', '03subcl5-800-7-50-bi', '03subcl5-800-7-60-bi', '03subcl5-800-7-70-bi', 
        '04clover5z-800-7-0-bi', '04clover5z-800-7-30-bi', '04clover5z-800-7-50-bi', '04clover5z-800-7-60-bi', 
        '04clover5z-800-7-70-bi', 'paw02a-800-7-0-bi', 'paw02a-800-7-30-bi', 'paw02a-800-7-50-bi', 
        'paw02a-800-7-60-bi', 'paw02a-800-7-70-bi']


nfolds=5
k_neighbors=1

for element in fname:
    for folds in range(1,(nfolds+1)):
        ftra = 'datasets/'+element+'/'+element+'-'+str(nfolds)+'-'+str(folds)+'tra.prn'
        ftst = 'datasets/'+element+'/'+element+'-'+str(nfolds)+'-'+str(folds)+'tst.prn'

        X_tra,y_tra = load_dataset(ftra)
        
        X_tst,y_tst = load_dataset(ftst)

        clf = neighbors.KNeighborsClassifier(k_neighbors,weights='uniform')

        clf.fit(X_tra,y_tra)

        ypred = clf.predict(X_tst)

        print(recall_score(y_tst,ypred,average = None))
        


